name: Build and Deploy To EC2

on:
  #Triggers the workflow on push only for the "master/main" branch
  push:
    branches:
      - master
      - main
  #Allows run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.x

      - name: Build binary
        run: make build

      - name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: openim
          path: .

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: test
#        run: go test ./...

  deploy:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: DEVELOPMENT
      
    needs:
      - build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: openim

      - name: list files
        run: ls

      - name: Setup SSH
        id: ssh-server
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: 3.15.217.204
          SSH_PORT: 22
          SSH_USER: ec2-user
          SSH_KEY: ${{ secrets.SSH_EC2_PRIVATE_KEY }}
#          ssh-private-key: ${{ secrets[format('SSH_EC2_PRIVATE_KEY_{0}', env.ENVIRONMENT)] }}
#          ssh-private-key: ${{ secrets.SSH_EC2_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ls
          scp ./openim ${{ steps.ssh-server.outputs.SERVER }}:/var/www/openim
          ssh ${{ steps.ssh-server.outputs.SERVER }} 'touch /var/www/openim/a.md && echo "hello world" '

#          ssh ec2-user@3.15.217.204 'cd /var/www/openim && touch test.md'

#        run: scp openim ec2-user@ec2-3-15-217-204.us-east-2.compute.amazonaws.com:/var/www/openim
#        run: scp openim ec2-user@ec2-3-15-217-204.us-east-2.compute.amazonaws.com:/var/www/openim
#        run: |
#        #send file to EC2 server by scp
#          scp -r openim/ user@your_ec2_ip:/path/to/destination
#        #运行部署脚本
#          ssh user@your_ec2_ip 'bash -s' < deploy_script.sh

#      - name: Restart Supervisor
#        run: ssh user@your_ec2_ip 'supervisorctl restart your_service_name'
